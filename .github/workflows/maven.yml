name: CI/CD Workflow

on:
  push:
    branches:
      - feature/integrate-cicd
      - main
  pull_request:
    branches:
      - main

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: '17'

      - name: Build project with Maven
        run: |
          mvn clean package -DskipTests

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and push Docker image
        env:
          IMAGE_NAME: ${{ secrets.DOCKER_USERNAME }}/mail-service:latest
        run: |
          docker build -t $IMAGE_NAME .
          docker push $IMAGE_NAME

      - name: Deploy to VPS
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.VPS_HOST }}
          username: ${{ secrets.VPS_USER }}
          key: ${{ secrets.VPS_KEY }}
          port: 22
          script: |
            IMAGE_NAME=${{ secrets.DOCKER_USERNAME }}/mail-service:latest
            echo "Pulling the latest Docker image..."
            docker pull $IMAGE_NAME
            echo "Stopping and removing the old container if exists..."
            docker stop mail-service || true
            docker rm mail-service || true
            echo "Running the new container..."
            docker run -d --name mail-service \
              --network host \
              -p 8080:8080 \
              --env DB_URL=jdbc:mysql://localhost:3306/echo_english \
              --env DB_USERNAME=root \
              --env DB_PASSWORD=${{ secrets.DB_PASSWORD }} \
              --env MAIL_HOST=smtp.sendgrid.net \
              --env MAIL_PORT=${{ secrets.MAIL_PORT }} \
              --env USERNAME_MAIL=${{ secrets.USERNAME_MAIL }} \
              --env PASSWORD_MAIL=${{ secrets.PASSWORD_MAIL }} \
              --env 'SIGNER_KEY=${{ secrets.SIGNER_KEY }}' \
              $IMAGE_NAME
